#!/usr/bin/env php
<?php

if ($argc > 1 && $argv[1] === 'config') {
  print('graph_title Traffic rate'.PHP_EOL);
  print('graph_vlabel bits in (-) / out (+) per ${graph_period}'.PHP_EOL);
  print('graph_category superhub'.PHP_EOL);
  print('graph_args --base 1000'.PHP_EOL);
  print('graph_order down up'.PHP_EOL);

  print('down.label received'.PHP_EOL);
  print('down.type ABSOLUTE'.PHP_EOL);
  print('down.graph no'.PHP_EOL);
  print('down.cdef down,8,*'.PHP_EOL);

  print('up.label bps'.PHP_EOL);
  print('up.type ABSOLUTE'.PHP_EOL);
  print('up.negative down'.PHP_EOL);
  print('up.cdef up,8,*'.PHP_EOL);

  exit();
}

function parseDataString($input) {
  $input = explode(' ', $input);
  $input[0] = str_replace(',', '', $input[0]);

  // Attempt to filter out bad data.
  if (strlen($input[0]) >= 10) {
    return 'U';
  }

  switch($input[1]) {
  case 'GB':
    $input = $input[0] * 1000000000;
    break;
  case 'MB':
    $input = $input[0] * 1000000;
    break;
  case 'KB':
    $input = $input[0] * 1000;
    break;
  case 'bytes':
    $input = $input[0];
    break;
  default:
    $input = 'U';
  }

  return $input;
}

$document = new DOMDocument();
$document->loadHTMLFile('http://'.getenv('host').'/VmLogin.html', LIBXML_NONET);
$query = new DOMXPath($document);
$loginFieldName = $query->evaluate('string(//input[@id="password"]/@name)');

$loginRequest = curl_init('http://'.getenv('host').'/cgi-bin/VmLoginCgi');
curl_setopt($loginRequest, CURLOPT_POST, true);
curl_setopt($loginRequest, CURLOPT_POSTFIELDS, $loginFieldName.'='.getenv('password').'&VmWpsPin='.getenv('wpspin'));
curl_setopt($loginRequest, CURLOPT_RETURNTRANSFER, true);
$loginBody = curl_exec($loginRequest);
$httpCode = curl_getinfo($loginRequest, CURLINFO_HTTP_CODE);
curl_close($loginRequest);

$varPattern = '/var res="(?P<res>\d)";[\s\S]*?var defpass="(?P<defpass>\d)";[\s\S]*?var wpsPinAuth="(?P<wpsPinAuth>\d)";[\s\S]*?var singleUser="(?P<singleUser>\d)";[\s\S]*?var lanAccess="(?P<lanAccess>\d)";/';
if ($httpCode !== 200 || preg_match($varPattern, $loginBody, $loginVars) !== 1 || $loginVars['res'] !== '0' || $loginVars['singleUser'] !== '0') {
  print('down.value U'.PHP_EOL);
  print('up.value U'.PHP_EOL);
  exit();
}

$document = new DOMDocument();
@$document->loadHTMLFile('http://'.getenv('host').'/device_connection_status.html', LIBXML_NONET);
//error_log($document->saveHTML());

$query = new DOMXPath($document);

$dataDownloaded = $query->evaluate('string(//div[@id="activitySummary"]/div/span[../label="Session Data Downloaded"]/text())');
//error_log('Session Data Downloaded: '.$dataDownloaded);

$dataDownloaded = parseDataString($dataDownloaded);

print('down.value '.$dataDownloaded.PHP_EOL);
//error_log('Session Data Downloaded Value: '.$dataDownloaded);

$dataUploaded = $query->evaluate('string(//div[@id="activitySummary"]/div/span[../label="Session Data Uploaded"]/text())');
//error_log('Session Data Uploaded: '.$dataUploaded);

$dataUploaded = parseDataString($dataUploaded);

print('up.value '.$dataUploaded.PHP_EOL);
//error_log('Session Data Uploaded Value: '.$dataUploaded);

$resetRequest = curl_init('http://'.getenv('host').'/cgi-bin/deviceconnectionstatusCgi');
curl_setopt($resetRequest, CURLOPT_POST, true);
curl_setopt($resetRequest, CURLOPT_RETURNTRANSFER, true);
curl_exec($resetRequest);
curl_close($resetRequest);

file_get_contents('http://'.getenv('host').'/VmLogout2.html');
